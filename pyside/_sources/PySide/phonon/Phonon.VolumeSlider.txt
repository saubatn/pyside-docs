.. module:: PySide.phonon
.. _Phonon.VolumeSlider:

Phonon.VolumeSlider
*******************

.. inheritance-diagram:: Phonon.VolumeSlider
    :parts: 2

Synopsis
--------

Functions
^^^^^^^^^
.. container:: function_list

*    def :meth:`audioOutput<PySide.phonon.Phonon.VolumeSlider.audioOutput>` ()
*    def :meth:`hasTracking<PySide.phonon.Phonon.VolumeSlider.hasTracking>` ()
*    def :meth:`iconSize<PySide.phonon.Phonon.VolumeSlider.iconSize>` ()
*    def :meth:`isMuteVisible<PySide.phonon.Phonon.VolumeSlider.isMuteVisible>` ()
*    def :meth:`maximumVolume<PySide.phonon.Phonon.VolumeSlider.maximumVolume>` ()
*    def :meth:`orientation<PySide.phonon.Phonon.VolumeSlider.orientation>` ()
*    def :meth:`pageStep<PySide.phonon.Phonon.VolumeSlider.pageStep>` ()
*    def :meth:`setPageStep<PySide.phonon.Phonon.VolumeSlider.setPageStep>` (milliseconds)
*    def :meth:`setSingleStep<PySide.phonon.Phonon.VolumeSlider.setSingleStep>` (milliseconds)
*    def :meth:`setTracking<PySide.phonon.Phonon.VolumeSlider.setTracking>` (tracking)
*    def :meth:`singleStep<PySide.phonon.Phonon.VolumeSlider.singleStep>` ()


Slots
^^^^^
.. container:: function_list

*    def :meth:`setAudioOutput<PySide.phonon.Phonon.VolumeSlider.setAudioOutput>` (arg__1)
*    def :meth:`setIconSize<PySide.phonon.Phonon.VolumeSlider.setIconSize>` (size)
*    def :meth:`setMaximumVolume<PySide.phonon.Phonon.VolumeSlider.setMaximumVolume>` (arg__1)
*    def :meth:`setMuteVisible<PySide.phonon.Phonon.VolumeSlider.setMuteVisible>` (arg__1)
*    def :meth:`setOrientation<PySide.phonon.Phonon.VolumeSlider.setOrientation>` (arg__1)


Detailed Description
--------------------



    The :class:`~PySide.phonon.Phonon.VolumeSlider` widget provides a slider that is used to control the volume of an audio output device.

    The slider also displays an icon indicating if the volume of the :class:`Phonon.AudioOutput` it is connected to is muted. The icon can be removed with :meth:`PySide.phonon.Phonon::VolumeSlider.setMuteVisible` .

    It is possible to set the :meth:`maximum<PySide.phonon.Phonon::VolumeSlider.maximumVolume>` value of the slider. By default, the minimum and maximum values of the slider are 0.0 (no sound) to 1.0 (the maximum volume the audio output can produce).

    Here follows a code example:

    ::

            Phonon::AudioOutput *audioOutput = new Phonon::AudioOutput(Phonon::MusicCategory);
            Phonon::createPath(mediaObject, audioOutput);

            Phonon::VolumeSlider *volumeSlider = new Phonon::VolumeSlider;
            volumeSlider->setAudioOutput(audioOutput);


    .. seealso::  :ref:`Phonon Module<phonon-module.html>` 

.. class:: PySide.phonon.Phonon.VolumeSlider(arg__1[, parent=None])
           PySide.phonon.Phonon.VolumeSlider([parent=None])

    :param parent: :class:`PySide.QtGui.QWidget`
    :param arg__1: :class:`PySide.phonon.Phonon::AudioOutput`

    Constructs a new volume slider with the given ``output`` object and ``parent`` .


    Constructs a new volume slider with the given ``parent`` .


.. method:: PySide.phonon.Phonon.VolumeSlider.audioOutput()


    :rtype: :class:`PySide.phonon.Phonon::AudioOutput`




    .. seealso::  :meth:`PySide.phonon.Phonon::VolumeSlider.setAudioOutput` 


.. method:: PySide.phonon.Phonon.VolumeSlider.hasTracking()


    :rtype: :class:`PySide.QtCore.bool`




    This property holds whether slider tracking is enabled.

    If tracking is enabled (the default), the volume changes while the slider is being dragged. If tracking is disabled, the volume changes only when the user releases the slider.



.. method:: PySide.phonon.Phonon.VolumeSlider.iconSize()


    :rtype: :class:`PySide.QtCore.QSize`




    This property holds the icon size used for the mute button/icon..

    The default size is defined by the GUI style.



.. method:: PySide.phonon.Phonon.VolumeSlider.isMuteVisible()


    :rtype: :class:`PySide.QtCore.bool`




    This property holds whether the mute button/icon next to the slider is visible.

    By default the mute button/icon is visible.



.. method:: PySide.phonon.Phonon.VolumeSlider.maximumVolume()


    :rtype: :class:`PySide.QtCore.qreal`




    This property holds the maximum volume that can be set with this slider.

    By default the maximum value is 1.0 (100%).



.. method:: PySide.phonon.Phonon.VolumeSlider.orientation()


    :rtype: :attr:`PySide.QtCore.Qt.Orientation`




    This property holds the orientation of the slider.

    The orientation must be :attr:`Qt.Vertical<Qt.Orientation>` (the default) or :attr:`Qt.Horizontal<Qt.Orientation>` .



.. method:: PySide.phonon.Phonon.VolumeSlider.pageStep()


    :rtype: :class:`PySide.QtCore.int`




    This property holds the page step.

    The larger of two natural steps that a slider provides and typically corresponds to the user pressing PageUp or PageDown.

    Defaults to 5 (5% of the voltage).



.. method:: PySide.phonon.Phonon.VolumeSlider.setAudioOutput(arg__1)


    :param arg__1: :class:`PySide.phonon.Phonon::AudioOutput`







.. method:: PySide.phonon.Phonon.VolumeSlider.setIconSize(size)


    :param size: :class:`PySide.QtCore.QSize`




    This property holds the icon size used for the mute button/icon..

    The default size is defined by the GUI style.



.. method:: PySide.phonon.Phonon.VolumeSlider.setMaximumVolume(arg__1)


    :param arg__1: :class:`PySide.QtCore.qreal`




    This property holds the maximum volume that can be set with this slider.

    By default the maximum value is 1.0 (100%).



.. method:: PySide.phonon.Phonon.VolumeSlider.setMuteVisible(arg__1)


    :param arg__1: :class:`PySide.QtCore.bool`




    This property holds whether the mute button/icon next to the slider is visible.

    By default the mute button/icon is visible.



.. method:: PySide.phonon.Phonon.VolumeSlider.setOrientation(arg__1)


    :param arg__1: :attr:`PySide.QtCore.Qt.Orientation`




    This property holds the orientation of the slider.

    The orientation must be :attr:`Qt.Vertical<Qt.Orientation>` (the default) or :attr:`Qt.Horizontal<Qt.Orientation>` .



.. method:: PySide.phonon.Phonon.VolumeSlider.setPageStep(milliseconds)


    :param milliseconds: :class:`PySide.QtCore.int`




    This property holds the page step.

    The larger of two natural steps that a slider provides and typically corresponds to the user pressing PageUp or PageDown.

    Defaults to 5 (5% of the voltage).



.. method:: PySide.phonon.Phonon.VolumeSlider.setSingleStep(milliseconds)


    :param milliseconds: :class:`PySide.QtCore.int`




    This property holds the single step.

    The smaller of two natural steps that a slider provides and typically corresponds to the user pressing an arrow key.

    Defaults to 1 (1% of the voltage).



.. method:: PySide.phonon.Phonon.VolumeSlider.setTracking(tracking)


    :param tracking: :class:`PySide.QtCore.bool`




    This property holds whether slider tracking is enabled.

    If tracking is enabled (the default), the volume changes while the slider is being dragged. If tracking is disabled, the volume changes only when the user releases the slider.



.. method:: PySide.phonon.Phonon.VolumeSlider.singleStep()


    :rtype: :class:`PySide.QtCore.int`




    This property holds the single step.

    The smaller of two natural steps that a slider provides and typically corresponds to the user pressing an arrow key.

    Defaults to 1 (1% of the voltage).




