.. module:: PySide.phonon
.. _Phonon.EffectWidget:

Phonon.EffectWidget
*******************

.. inheritance-diagram:: Phonon.EffectWidget
    :parts: 2

Detailed Description
--------------------



    The :class:`~PySide.phonon.Phonon.EffectWidget` class provides a widget to control the parameters of an Effect.

    The :class:`~PySide.phonon.Phonon.EffectWidget` class provides a widget, with which an effects parameters can be controlled. The widget does not have an API, and is constructed with the :class:`Phonon.Effect` , of which parameters should be controlled.

    ::

            Phonon::Effect *effect = new Phonon::Effect(effectDescription);
            path.insertEffect(effect);


            Phonon::EffectWidget *effectWidget = new Phonon::EffectWidget(effect);
            effectWidget->show();


    The following image shows an example of an effect widget.

    .. image:: ../../../../../../qt-everywhere-opensource-src-4.8.5/doc/src/images/effectwidget.png

    Note that some audio effects do not have parameters, and the widget will then not :meth:`PySide.QtGui.QWidget.show` at all.

    .. seealso::  :class:`~PySide.phonon.Phonon.Effect`  :ref:`BackendCapabilities<phonon-backendcapabilities.html>`  :class:`~PySide.phonon.Phonon.EffectDescription`  :ref:`Phonon Module<phonon-module.html>` 

.. class:: PySide.phonon.Phonon.EffectWidget(effect[, parent=None])

    :param effect: :class:`PySide.phonon.Phonon::Effect`
    :param parent: :class:`PySide.QtGui.QWidget`

    Constructs a new :class:`~PySide.phonon.Phonon.EffectWidget` for the specified ``effect`` and with the specified ``parent`` .



